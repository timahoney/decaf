/*
 * This file is part of the WebKit open source project.
 * This file has been generated by generate-bindings.pl. DO NOT MODIFY!
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

#include "config.h"
#include "RBMutationCallback.h"

#include "RBConverters.h"
#include "RBObject.h"
#include <Ruby/ruby.h>

namespace WebCore {

RBMutationCallback::RBMutationCallback(VALUE proc, ScriptExecutionContext* context)
    : RBCallback(proc)
    , ActiveDOMCallback(context)
{
}

RBMutationCallback::~RBMutationCallback()
{
}

void RBMutationCallback::call(const Vector<RefPtr<MutationRecord> >& mutations, MutationObserver* observer)
{
    if (!canInvokeCallback())
        return;

    RefPtr<RBMutationCallback> protect(this);

    VALUE argv[2];
    argv[0] = toRB(mutations);
    argv[1] = toRB(observer);
    RBCallback::call(scriptExecutionContext(), 2, argv);
}

} // namespace WebCore
